# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: amurtone <amurtone@student.hive.fi>        +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/01/21 08:57:27 by amurtone          #+#    #+#              #
#    Updated: 2020/03/05 17:13:18 by amurtone         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME = libft.a
SRC_PF = ft_printf/binary.c ft_printf/char.c ft_printf/conversions.c ft_printf/float.c ft_printf/float2.c \
		ft_printf/format_parse.c ft_printf/ft_error.c ft_printf/ft_printf.c ft_printf/hex.c \
		ft_printf/ints.c ft_printf/modifiers.c ft_printf/octals.c ft_printf/pointer.c ft_printf/strings.c \
		ft_printf/support.c ft_printf/support2.c ft_printf/udecint.c
SRC_LIBFT = libft/ft_atoi.c libft/ft_bzero.c libft/ft_isalnum.c libft/ft_isalpha.c libft/ft_isascii.c libft/ft_isdigit.c \
		libft/ft_isprint.c libft/ft_itoa.c libft/ft_memalloc.c libft/ft_memccpy.c libft/ft_memchr.c libft/ft_memcmp.c \
		libft/ft_memcpy.c libft/ft_memdel.c libft/ft_memmove.c libft/ft_memset.c libft/ft_putchar.c libft/ft_putchar_fd.c \
		libft/ft_putendl.c libft/ft_putendl_fd.c libft/ft_putnbr.c libft/ft_putnbr_fd.c libft/ft_putstr.c \
		libft/ft_putstr_fd.c libft/ft_strcat.c libft/ft_strchr.c libft/ft_strclr.c libft/ft_strcmp.c libft/ft_strcpy.c \
		libft/ft_strdel.c libft/ft_strdup.c libft/ft_strequ.c libft/ft_striter.c libft/ft_striteri.c libft/ft_strjoin.c \
		libft/ft_strlcat.c libft/ft_strlen.c libft/ft_strmap.c libft/ft_strmapi.c libft/ft_strncat.c libft/ft_strncmp.c \
		libft/ft_strncpy.c libft/ft_strnequ.c libft/ft_strnew.c libft/ft_strnstr.c libft/ft_strrchr.c libft/ft_strsplit.c \
		libft/ft_strstr.c libft/ft_strsub.c libft/ft_strtrim.c libft/ft_tolower.c libft/ft_toupper.c libft/ft_lstnew.c \
		libft/ft_lstdelone.c libft/ft_lstdel.c libft/ft_lstadd.c libft/ft_lstiter.c libft/get_next_line.c \
		libft/ft_itoa_base.c libft/ft_stradd.c
VPATH = SRC_LIBFT:SRC_PF
DIR_S = srcs
SRCS = $(addprefix $(DIR_S)/,$(VPATH))
OBJ = $(subst .c,.o,$(VPATH))
HEADER = includes/ft_print_f.h includes/libft.h
LIBFT = libft/
LIB_NAME = libft.a
LIB = $(LIBFT)$(LIB_NAME)
CC = gcc
FLAGS = -Wall -Wextra -Werror
COLOR_RESET = \033[0m
COLOR_PENDING = \033[01;33m
COLOR_SUCCESS = \033[1;32m
COLOR_DEFAULT = \033[1;34m

all: $(NAME)
$(NAME): $(OBJS)
	@echo "$(LIB_NAME)     [$(COLOR_PENDING)Compiling...$(COLOR_RESET)]"
	@make -C $(LIBFT)
	@echo "\033[A\033[K\033[A"
	@echo "$(LIB_NAME) [$(COLOR_SUCCESS)OK$(COLOR_RESET)]"
	@cp $(LIB) $(NAME)
	@echo "$(NAME)     [$(COLOR_PENDING)Compiling...$(COLOR_RESET)]"
	@$(CC) $(FLAGS) -I $(HEADER) -I $(LIB_PATH)/includes -c $(SRCS)
	@ar rc $(NAME) $(OBJ)
	@ranlib $(NAME)
	@echo "\033[A\033[K\033[A"
	@echo "$(NAME)     [$(COLOR_SUCCESS)OK$(COLOR_RESET)]"
	@echo "        [$(COLOR_SUCCESS)FINISHED$(COLOR_RESET)]"
test:
	$(CC) $(NAME) main.c
	./a.out
norme:
	@echo "$(LIBFT)     [$(COLOR_PENDING)Libft Norm$(COLOR_RESET)]"
	norminette ./libft/
	@echo "$(HEADER)     [$(COLOR_PENDING)Header Norm$(COLOR_RESET)]"
	norminette ./$(HEADER)/
	@echo "$(DIR_S)     [$(COLOR_PENDING)Source Norm$(COLOR_RESET)]"
	norminette ./$(DIR_S)/
clean:
	@make -C $(LIBFT) clean
	@rm -f $(OBJ)
	@echo "$(NAME): $(COLOR_SUCCESS)$(OBJ) DELETED$(COLOR_RESET)"
	@echo "$(NAME): $(COLOR_SUCCESS)All object files were deleted$(COLOR_RESET)"
fclean: clean
	@make -C $(LIBFT) fclean
	@echo "$(NAME): $(COLOR_SUCCESS)$(LIB) DELETED$(COLOR_RESET)"
	@rm -rfv $(NAME)
	@echo "$(NAME): $(COLOR_SUCCESS)$(NAME) DELETED$(COLOR_RESET)"
re: fclean all
.PHONY: all clean fclean norme re